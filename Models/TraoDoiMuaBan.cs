// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WPF_Market.Models;

public partial class TraoDoiMuaBan : DbContext
{
    public TraoDoiMuaBan(DbContextOptions<TraoDoiMuaBan> options)
        : base(options)
    {
    }

    public TraoDoiMuaBan()
    {
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer(Properties.Settings.Default.TraoDoiMuaBan);
    }
    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Cart> Carts { get; set; }

    public virtual DbSet<ImageLink> ImageLinks { get; set; }

    public virtual DbSet<Inventory> Inventories { get; set; }

    public virtual DbSet<Shop> Shops { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<helloworld> helloworlds { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK_Account_1");

            entity.ToTable("Account");

            entity.HasIndex(e => e.UserName, "UQ__Account__C9F2845681F2AFF2").IsUnique();

            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Password).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Cart>(entity =>
        {
            entity.HasKey(e => new { e.IDUser, e.IDProduct });

            entity.ToTable("Cart");

            entity.HasOne(d => d.IDProductNavigation).WithMany(p => p.Carts)
                .HasForeignKey(d => d.IDProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart__IDProduct__1C873BEC");

            entity.HasOne(d => d.IDUserNavigation).WithMany(p => p.Carts)
                .HasForeignKey(d => d.IDUser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Cart_Product_User");
        });

        modelBuilder.Entity<ImageLink>(entity =>
        {
            entity.HasKey(e => new { e.IDProduct, e.ImageLink1 });

            entity.ToTable("ImageLink");

            entity.Property(e => e.ImageLink1)
                .HasMaxLength(255)
                .HasColumnName("ImageLink");

            entity.HasOne(d => d.IDProductNavigation).WithMany(p => p.ImageLinks)
                .HasForeignKey(d => d.IDProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ImageLink_Inventory");
        });

        modelBuilder.Entity<Inventory>(entity =>
        {
            entity.HasKey(e => e.IDProduct).HasName("PK__tmp_ms_x__4290D179DD00F021");

            entity.ToTable("Inventory");

            entity.Property(e => e.Type).HasMaxLength(50);

            entity.HasOne(d => d.IDShopNavigation).WithMany(p => p.Inventories)
                .HasForeignKey(d => d.IDShop)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IDShop");
        });

        modelBuilder.Entity<Shop>(entity =>
        {
            entity.HasKey(e => e.IDShop).HasName("PK__tmp_ms_x__EB360B913B87F53C");

            entity.ToTable("Shop");

            entity.Property(e => e.IDShop).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.NameShop).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);

            entity.HasOne(d => d.IDShopNavigation).WithOne(p => p.Shop)
                .HasForeignKey<Shop>(d => d.IDShop)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ShopID");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__User__3214EC07AB300865");

            entity.ToTable("User");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.DoB).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.IDFavProduct)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.IDFavShop)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.IdentityNum).HasMaxLength(50);
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);
            entity.Property(e => e.Sex).HasMaxLength(50);

            entity.HasOne(d => d.IDNavigation).WithOne(p => p.User)
                .HasForeignKey<User>(d => d.ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserID");
        });

        modelBuilder.Entity<helloworld>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__hellowor__3213E83F0246803C");

            entity.ToTable("helloworld");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}