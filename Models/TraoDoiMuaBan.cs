// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WPF_Market.Models;

public partial class TraoDoiMuaBan : DbContext
{
    public TraoDoiMuaBan(DbContextOptions<TraoDoiMuaBan> options)
        : base(options)
    {
    }
    public TraoDoiMuaBan()
    {
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer(Properties.Settings.Default.TraoDoiMuaBan);
    }
    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Cart> Carts { get; set; }

    public virtual DbSet<Helloworld> Helloworlds { get; set; }

    public virtual DbSet<ImageLink> ImageLinks { get; set; }

    public virtual DbSet<Iventory> Iventories { get; set; }

    public virtual DbSet<Kho> Khos { get; set; }

    public virtual DbSet<Shop> Shops { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => new { e.Id, e.UserName, e.Email });

            entity.ToTable("Account");

            entity.HasIndex(e => e.UserName, "UQ__Account__C9F2845681F2AFF2").IsUnique();

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UserName).HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.Password).HasMaxLength(50);
        });

        modelBuilder.Entity<Cart>(entity =>
        {
            entity.HasKey(e => e.IdCart).HasName("PK__Cart__72140ECF91CB9802");

            entity.ToTable("Cart");

            entity.Property(e => e.IdCart)
                .ValueGeneratedNever()
                .HasColumnName("ID_Cart");
            entity.Property(e => e.IdProduct).HasColumnName("ID_Product");
            entity.Property(e => e.IdShop).HasColumnName("ID_Shop");
            entity.Property(e => e.IdUser).HasColumnName("ID_User");
        });

        modelBuilder.Entity<Helloworld>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__hellowor__3213E83F0246803C");

            entity.ToTable("helloworld");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<ImageLink>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Image_li__3214EC07892C4E48");

            entity.ToTable("Image_link");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.ImageLink1).HasColumnName("Image_link");
        });

        modelBuilder.Entity<Iventory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Iventory__3214EC074D33F9B3");

            entity.ToTable("Iventory");

            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<Kho>(entity =>
        {
            entity.HasKey(e => e.IdSanpham).HasName("PK__Kho__0BC662859A87BDBD");

            entity.ToTable("Kho");

            entity.Property(e => e.IdSanpham)
                .ValueGeneratedNever()
                .HasColumnName("Id_sanpham");
            entity.Property(e => e.DoMoi)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.IdShop).HasColumnName("Id_shop");
            entity.Property(e => e.NumberSold)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Type).HasMaxLength(50);

            entity.HasOne(d => d.IdShopNavigation).WithMany(p => p.Khos)
                .HasForeignKey(d => d.IdShop)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Kho_Shop");
        });

        modelBuilder.Entity<Shop>(entity =>
        {
            entity.HasKey(e => e.IdShop).HasName("PK__tmp_ms_x__EB360B913B87F53C");

            entity.ToTable("Shop");

            entity.Property(e => e.IdShop)
                .ValueGeneratedNever()
                .HasColumnName("ID_Shop");
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.NameShop)
                .HasMaxLength(50)
                .HasColumnName("Name_Shop");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(50)
                .HasColumnName("Phone_Number");
            entity.Property(e => e.ShopAvatar).HasColumnName("Shop_Avatar");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__User__3214EC07AB300865");

            entity.ToTable("User");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.AvatarSource).HasColumnName("Avatar_Source");
            entity.Property(e => e.Cmnd)
                .HasMaxLength(50)
                .HasColumnName("CMND");
            entity.Property(e => e.DoB).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.IdFavProduct)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("Id_fav_product");
            entity.Property(e => e.IdFavShop)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("id_fav_shop");
            entity.Property(e => e.IdShop).HasColumnName("Id_shop");
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(50)
                .HasColumnName("Phone_Number");
            entity.Property(e => e.Sex).HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }
    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}