// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WPF_Market.Models;

public partial class DataBaseContext : DbContext
{
    public DataBaseContext(DbContextOptions<DataBaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Cart> Carts { get; set; }

    public virtual DbSet<Helloworld> Helloworlds { get; set; }

    public virtual DbSet<ImageLink> ImageLinks { get; set; }

    public virtual DbSet<Inventory> Inventories { get; set; }

    public virtual DbSet<Shop> Shops { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Account_1");

            entity.ToTable("Account");

            entity.HasIndex(e => e.UserName, "UQ__Account__C9F2845699DB20C4").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Password).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Cart>(entity =>
        {
            entity.HasKey(e => e.IdCart).HasName("PK__Cart__72140ECF33E383F3");

            entity.ToTable("Cart");

            entity.Property(e => e.IdCart)
                .ValueGeneratedNever()
                .HasColumnName("ID_Cart");
            entity.Property(e => e.IdProduct).HasColumnName("ID_Product");
            entity.Property(e => e.IdShop).HasColumnName("ID_Shop");
            entity.Property(e => e.IdUser).HasColumnName("ID_User");
        });

        modelBuilder.Entity<Helloworld>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__hellowor__3213E83F968017B1");

            entity.ToTable("helloworld");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<ImageLink>(entity =>
        {
            entity.HasKey(e => new { e.Idproduct, e.ImageLink1 }).HasName("PK__ImageLin__EE67F8802D596687");

            entity.ToTable("ImageLink");

            entity.Property(e => e.Idproduct)
                .ValueGeneratedOnAdd()
                .HasColumnName("IDProduct");
            entity.Property(e => e.ImageLink1)
                .HasMaxLength(50)
                .HasColumnName("ImageLink");
            entity.Property(e => e.FirstImage).HasMaxLength(50);

            entity.HasOne(d => d.IdproductNavigation).WithMany(p => p.ImageLinks)
                .HasForeignKey(d => d.Idproduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ImageLink__IDPro__440B1D61");
        });

        modelBuilder.Entity<Inventory>(entity =>
        {
            entity.HasKey(e => e.Idproduct).HasName("PK__Inventor__4290D17956C2CBBE");

            entity.ToTable("Inventory");

            entity.Property(e => e.Idproduct).HasColumnName("IDProduct");
            entity.Property(e => e.Idshop).HasColumnName("IDShop");
            entity.Property(e => e.Newness)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Type).HasMaxLength(50);

            entity.HasOne(d => d.IdshopNavigation).WithMany(p => p.Inventories)
                .HasForeignKey(d => d.Idshop)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IDShop");
        });

        modelBuilder.Entity<Shop>(entity =>
        {
            entity.HasKey(e => e.Idshop).HasName("PK__Shop__C52550280CE9C161");

            entity.ToTable("Shop");

            entity.Property(e => e.Idshop)
                .ValueGeneratedNever()
                .HasColumnName("IDShop");
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.NameShop).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);

            entity.HasOne(d => d.IdshopNavigation).WithOne(p => p.Shop)
                .HasForeignKey<Shop>(d => d.Idshop)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ShopID");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__User__3214EC27A9507687");

            entity.ToTable("User");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.DoB).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.IdentityNum).HasMaxLength(50);
            entity.Property(e => e.IdfavProduct)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("IDFavProduct");
            entity.Property(e => e.IdfavShop)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("IDFavShop");
            entity.Property(e => e.Idshop).HasColumnName("IDShop");
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.PhoneNumber).HasMaxLength(50);
            entity.Property(e => e.Sex).HasMaxLength(50);

            entity.HasOne(d => d.IdNavigation).WithOne(p => p.User)
                .HasForeignKey<User>(d => d.Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserID");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}